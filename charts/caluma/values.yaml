# Default values for caluma.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  backend:
    repository: ghcr.io/projectcaluma/caluma
    ## If no value for tag is specified the image tag
    ## version-{{ .Chart.AppVersion }} is being used.
    # tag: version-2.0.0
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # imagePullSecrets:
    #   - myRegistryKeySecretName
  frontend:
    repository: ghcr.io/projectcaluma/caluma-portal-demo
    tag: latest
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # imagePullSecrets:
    #   - myRegistryKeySecretName

nameOverride: ""
fullnameOverride: ""

secretKey: "SUPERSECRET"
# instead of exposing the secretKey in the values, a existingSecret can be defined
# if set no secret will be created by the Helm chart.
# create the secret manually:
# kubectl create secret generic -n your-namespace --from-literal=secretKey=SUPERSECRETKEY
existingSecret: ""
allowedHosts: "*"

frontend:
  additionalEnvironment: []
  ## Specify additional environment variables for the frontend deployment just
  ## like you would define them directly on the container spec.
  ## ref: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
  # - name: EXAMPLE
  #   value: example
  service:
    type: ClusterIP

backend:
  additionalEnvironment: []
  ## Specify additional environment variables for the backend deployment just
  ## like you would define them directly on the container spec.
  ## ref: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
  # - name: EXAMPLE
  #   value: example
  service:
    type: ClusterIP

  postgresql:
    ## Optionally sepcify an existing database host to connect to
    ## this can only be used if postgresql.enabled is set to false
    existingHost: ""


ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: caluma.chart-example.local

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

alexandria:
  # -- Deploy alexandria DMS
  enabled: false

postgresql:
  enabled: true

  global:
    postgresql:
      auth:
        database: caluma
        username: caluma
        password: CHANGEME

  ## This is one of those hacks where you're both proud and shocked about the
  ## thing you created at the same time.
  ##
  ## First this is required because the Bitnami PostgreSQL image is not running
  ## the initdb scripts passed as .sql with SUPERUSER privileges in PostgreSQL.
  ## ref: https://github.com/bitnami/bitnami-docker-postgresql/issues/155
  ##
  ## Next we thought that we could just override the pg_hba.conf via
  ## files/pg_hba.conf and switch socket connections to trust, but that didn't
  ## work either because somehow the .Files variable doesn't work in included
  ## subcharts.
  ## ref: https://github.com/helm/helm/issues/4994
  ##
  ## So now we're stuck with this piece of shell code to activate the hstore
  ## extension required by Caluma.
  initdbScripts:
    create_extension_hstore.sh: |
      # !/bin/sh
      #
      # This script is being used to temporarily switch socket connections to trusted
      # to enable the hstore extension in the database above.

      set -xeuf -o pipefail

      sed -E -i 's/local +all +all +md5/local all all trust/' /opt/bitnami/postgresql/conf/pg_hba.conf
      pg_ctl reload
      psql --username=postgres --dbname="${POSTGRES_DB}" --command 'CREATE EXTENSION IF NOT EXISTS hstore;' --echo-errors
      sed -E -i 's/local +all +all +trust/local all all md5/' /opt/bitnami/postgresql/conf/pg_hba.conf
      pg_ctl reload

##
## MinIO chart configuration
##
## https://github.com/helm/charts/blob/master/stable/minio/values.yaml
##
minio:
  ## Caluma relies on MinIO for persistency of uploads. If you need to handle
  ## uploads in your forms you need to enable the MinIO chart and configure
  ## ingress for external access.
  enabled: false
  accessKey: ""
  secretKey: ""
  defaultBucket:
    enabled: true
    name: caluma-media
    ## TODO: review MinIO policies
    # policy: none
  ingress:
    enabled: true
    annotations: {}
      ## You might need to increase the client_max_body_size in nginx-ingress
      ## you can do this using the following annotation.
      ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md#custom-max-body-size
      # nginx.ingress.kubernetes.io/proxy-body-size: 16m
      # kubernetes.io/ingress.class: "nginx"
    hosts:
      - caluma.chart-example.local
    tls: []
